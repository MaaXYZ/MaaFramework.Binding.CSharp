//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable CS1573 // 参数在 XML 注释中没有匹配的 param 标记
#pragma warning disable CS1591 // 缺少对公共可见类型或成员的 XML 注释

global using MaaControllerApiTuple = (
    MaaFramework.Binding.Interop.Native.MaaCustomControllerApi Unmanaged,
    MaaFramework.Binding.Custom.IMaaCustomController Managed,
    MaaFramework.Binding.Interop.Native.IMaaCustomControllerExtension.Connect Connect,
    MaaFramework.Binding.Interop.Native.IMaaCustomControllerExtension.RequestUuid RequestUuid,
    MaaFramework.Binding.Interop.Native.IMaaCustomControllerExtension.RequestResolution RequestResolution,
    MaaFramework.Binding.Interop.Native.IMaaCustomControllerExtension.StartApp StartApp,
    MaaFramework.Binding.Interop.Native.IMaaCustomControllerExtension.StopApp StopApp,
    MaaFramework.Binding.Interop.Native.IMaaCustomControllerExtension.Screencap Screencap,
    MaaFramework.Binding.Interop.Native.IMaaCustomControllerExtension.Click Click,
    MaaFramework.Binding.Interop.Native.IMaaCustomControllerExtension.Swipe Swipe,
    MaaFramework.Binding.Interop.Native.IMaaCustomControllerExtension.TouchDown TouchDown,
    MaaFramework.Binding.Interop.Native.IMaaCustomControllerExtension.TouchMove TouchMove,
    MaaFramework.Binding.Interop.Native.IMaaCustomControllerExtension.TouchUp TouchUp,
    MaaFramework.Binding.Interop.Native.IMaaCustomControllerExtension.PressKey PressKey,
    MaaFramework.Binding.Interop.Native.IMaaCustomControllerExtension.InputText InputText
);

using MaaFramework.Binding.Buffers;
using MaaFramework.Binding.Custom;
using System.Runtime.InteropServices;

namespace MaaFramework.Binding.Interop.Native;

/// <summary>
///     The custom controller API.
/// </summary>
/// <remarks>
///     To create a custom controller, you need to implement this API.
///     You do not have to implement all the functions in this API. Instead, just implement the functions you need. Do note that if an unimplemented function is called, the framework will likely crash.
/// </remarks>
[StructLayout(LayoutKind.Sequential)]
public class MaaCustomControllerApi
{
    public nint Connect;
    public nint RequestUuid;
    public nint RequestResolution;
    public nint StartApp;
    public nint StopApp;
    public nint Screencap;
    public nint Click;
    public nint Swipe;
    public nint TouchDown;
    public nint TouchMove;
    public nint TouchUp;
    public nint PressKey;
    public nint InputText;
}

/// <summary>
///     A static class providing extension methods for the converter of <see cref="IMaaCustomController"/>.
/// </summary>
public static class IMaaCustomControllerExtension
{
    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate MaaBool Connect(MaaTransparentArg handleArg);

    /// <summary>
    ///     Write result to buffer.
    /// </summary>
    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate MaaBool RequestUuid(MaaTransparentArg handleArg, MaaStringBufferHandle buffer);

    /// <summary>
    ///     Write result to width and height.
    /// </summary>
    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate MaaBool RequestResolution(MaaTransparentArg handleArg, out int width, out int height);

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate MaaBool StartApp(string intent, MaaTransparentArg handleArg);

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate MaaBool StopApp(string intent, MaaTransparentArg handleArg);

    /// <summary>
    ///     Write result to buffer.
    /// </summary>
    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate MaaBool Screencap(MaaTransparentArg handleArg, MaaImageBufferHandle buffer);

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate MaaBool Click(int x, int y, MaaTransparentArg handleArg);

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate MaaBool Swipe(int x1, int y1, int x2, int y2, int duration, MaaTransparentArg handleArg);

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate MaaBool TouchDown(int contact, int x, int y, int pressure, MaaTransparentArg handleArg);

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate MaaBool TouchMove(int contact, int x, int y, int pressure, MaaTransparentArg handleArg);

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate MaaBool TouchUp(int contact, MaaTransparentArg handleArg);

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate MaaBool PressKey(int keycode, MaaTransparentArg handleArg);

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate MaaBool InputText(string text, MaaTransparentArg handleArg);
    public static MaaCustomControllerApi Convert(this IMaaCustomController task, out MaaControllerApiTuple tuple)
    {
        MaaBool Connect(MaaTransparentArg handleArg) => task.Connect().ToMaaBool();

        MaaBool RequestUuid(MaaTransparentArg handleArg, MaaStringBufferHandle buffer) => task.RequestUuid(new Buffers.MaaStringBuffer(buffer)).ToMaaBool();

        MaaBool RequestResolution(MaaTransparentArg handleArg, out int width, out int height) => task.RequestResolution(out width, out height).ToMaaBool();

        MaaBool StartApp(string intent, MaaTransparentArg handleArg) => task.StartApp(intent).ToMaaBool();

        MaaBool StopApp(string intent, MaaTransparentArg handleArg) => task.StopApp(intent).ToMaaBool();

        MaaBool Screencap(MaaTransparentArg handleArg, MaaImageBufferHandle buffer) => task.Screencap(new MaaImageBuffer(buffer)).ToMaaBool();

        MaaBool Click(int x, int y, MaaTransparentArg handleArg) => task.Click(x, y).ToMaaBool();

        MaaBool Swipe(int x1, int y1, int x2, int y2, int duration, MaaTransparentArg handleArg) => task.Swipe(x1, y1, x2, y2, duration).ToMaaBool();

        MaaBool TouchDown(int contact, int x, int y, int pressure, MaaTransparentArg handleArg) => task.TouchDown(contact, x, y, pressure).ToMaaBool();

        MaaBool TouchMove(int contact, int x, int y, int pressure, MaaTransparentArg handleArg) => task.TouchMove(contact, x, y, pressure).ToMaaBool();

        MaaBool TouchUp(int contact, MaaTransparentArg handleArg) => task.TouchUp(contact).ToMaaBool();

        MaaBool PressKey(int keycode, MaaTransparentArg handleArg) => task.PressKey(keycode).ToMaaBool();

        MaaBool InputText(string text, MaaTransparentArg handleArg) => task.InputText(text).ToMaaBool();

        tuple = (new()
        {
            Connect = Marshal.GetFunctionPointerForDelegate<Connect>(Connect),
            RequestUuid = Marshal.GetFunctionPointerForDelegate<RequestUuid>(RequestUuid),
            RequestResolution = Marshal.GetFunctionPointerForDelegate<RequestResolution>(RequestResolution),
            StartApp = Marshal.GetFunctionPointerForDelegate<StartApp>(StartApp),
            StopApp = Marshal.GetFunctionPointerForDelegate<StopApp>(StopApp),
            Screencap = Marshal.GetFunctionPointerForDelegate<Screencap>(Screencap),
            Click = Marshal.GetFunctionPointerForDelegate<Click>(Click),
            Swipe = Marshal.GetFunctionPointerForDelegate<Swipe>(Swipe),
            TouchDown = Marshal.GetFunctionPointerForDelegate<TouchDown>(TouchDown),
            TouchMove = Marshal.GetFunctionPointerForDelegate<TouchMove>(TouchMove),
            TouchUp = Marshal.GetFunctionPointerForDelegate<TouchUp>(TouchUp),
            PressKey = Marshal.GetFunctionPointerForDelegate<PressKey>(PressKey),
            InputText = Marshal.GetFunctionPointerForDelegate<InputText>(InputText),
        },
            task,
            Connect,
            RequestUuid,
            RequestResolution,
            StartApp,
            StopApp,
            Screencap,
            Click,
            Swipe,
            TouchDown,
            TouchMove,
            TouchUp,
            PressKey,
            InputText
        );
        return tuple.Unmanaged;
    }
}
