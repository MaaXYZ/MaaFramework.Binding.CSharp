//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable CS1573 // 参数在 XML 注释中没有匹配的 param 标记
#pragma warning disable CS1591 // 缺少对公共可见类型或成员的 XML 注释

using System.Runtime.InteropServices;

namespace MaaFramework.Binding.Interop.Native;

public static partial class MaaToolkit
{
    [Obsolete("Use MaaToolkitPostFindDevice() and MaaToolkitWaitForFindDeviceToComplete() instead.")]
    [LibraryImport("MaaToolkit", StringMarshalling = StringMarshalling.Utf8)]
    public static partial MaaSize MaaToolkitFindDevice();

    [Obsolete("Use MaaToolkitPostFindDeviceWithAdb() and MaaToolkitWaitForFindDeviceToComplete() instead.")]
    [LibraryImport("MaaToolkit", StringMarshalling = StringMarshalling.Utf8)]
    public static partial MaaSize MaaToolkitFindDeviceWithAdb(string adbPath);

    /// <summary>
    ///     Post a request to find all ADB devices.
    /// </summary>
    [LibraryImport("MaaToolkit", StringMarshalling = StringMarshalling.Utf8)]
    public static partial MaaBool MaaToolkitPostFindDevice();

    /// <summary>
    ///     Post a request to find all ADB devices with a given ADB path.
    /// </summary>
    [LibraryImport("MaaToolkit", StringMarshalling = StringMarshalling.Utf8)]
    public static partial MaaBool MaaToolkitPostFindDeviceWithAdb(string adbPath);

    /// <summary>
    ///     Check if the find device request is completed.
    /// </summary>
    [LibraryImport("MaaToolkit", StringMarshalling = StringMarshalling.Utf8)]
    public static partial MaaBool MaaToolkitIsFindDeviceCompleted();

    /// <summary>
    ///     Wait for the find device request to complete.
    /// </summary>
    /// <returns>The number of devices found.</returns>
    [LibraryImport("MaaToolkit", StringMarshalling = StringMarshalling.Utf8)]
    public static partial MaaSize MaaToolkitWaitForFindDeviceToComplete();

    /// <summary>
    ///     Get the number of devices found.
    /// </summary>
    /// <returns>The number of devices found.</returns>
    [LibraryImport("MaaToolkit", StringMarshalling = StringMarshalling.Utf8)]
    public static partial MaaSize MaaToolkitGetDeviceCount();

    /// <summary>
    ///     Get the device name by index.
    /// </summary>
    /// <param name="index">The 0-based index of the device. The index should not exceed the number of devices found otherwise out_of_range exception will be thrown.</param>
    [LibraryImport("MaaToolkit", StringMarshalling = StringMarshalling.Utf8)]
    public static partial MaaStringView MaaToolkitGetDeviceName(MaaSize index);

    /// <summary>
    ///     Get the device ADB path by index.
    /// </summary>
    /// <param name="index">The 0-based index of the device. The index should not exceed the number of devices found otherwise out_of_range exception will be thrown.</param>
    [LibraryImport("MaaToolkit", StringMarshalling = StringMarshalling.Utf8)]
    public static partial MaaStringView MaaToolkitGetDeviceAdbPath(MaaSize index);

    /// <summary>
    ///     Get the device ADB serial by index.
    /// </summary>
    /// <param name="index">The 0-based index of the device. The index should not exceed the number of devices found otherwise out_of_range exception will be thrown.</param>
    [LibraryImport("MaaToolkit", StringMarshalling = StringMarshalling.Utf8)]
    public static partial MaaStringView MaaToolkitGetDeviceAdbSerial(MaaSize index);

    /// <summary>
    ///     Get the device ADB controller type by index.
    /// </summary>
    /// <param name="index">The 0-based index of the device. The index should not exceed the number of devices found otherwise out_of_range exception will be thrown.</param>
    [LibraryImport("MaaToolkit", StringMarshalling = StringMarshalling.Utf8)]
    public static partial MaaAdbControllerType MaaToolkitGetDeviceAdbControllerType(MaaSize index);

    /// <summary>
    ///     Get the device ADB config by index.
    /// </summary>
    /// <param name="index">The 0-based index of the device. The index should not exceed the number of devices found otherwise out_of_range exception will be thrown.</param>
    [LibraryImport("MaaToolkit", StringMarshalling = StringMarshalling.Utf8)]
    public static partial MaaStringView MaaToolkitGetDeviceAdbConfig(MaaSize index);
}
