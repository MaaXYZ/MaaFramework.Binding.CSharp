syntax = "proto3";

package maarpc;

option csharp_namespace = "MaaFramework.Binding.Grpc.Interop";

import "types.proto";
import "custom.controller.proto";

message AdbControllerRequest {
  optional string id = 1;
  optional string adb_path = 2;
  optional string adb_serial = 3;
  optional uint32 adb_type = 4;
  optional string adb_config = 5;
}

message ControllerSetOptionRequest {
  optional string handle = 1;
  oneof option {
    int32 long_side = 101;
    int32 short_side = 102;
    string def_package_entry = 103;
    string def_package = 104;
  }
}

message ControllerPostClickRequest {
  optional string handle = 1;
  optional ClickParam param = 2;
}

message ControllerPostSwipeRequest {
  optional string handle = 1;
  optional SwipeParam param = 2;
}

message ControllerPostKeyRequest {
  optional string handle = 1;
  optional KeyParam param = 2;
}

message ControllerPostTouchRequest {
  optional string handle = 1;
  optional TouchParam param = 2;
}

service Controller {
  rpc create_adb(AdbControllerRequest) returns (HandleResponse);
  rpc destroy(HandleRequest) returns (EmptyResponse);

  rpc create_custom(stream CustomControllerRequest)
      returns (stream CustomControllerResponse);

  rpc set_option(ControllerSetOptionRequest) returns (EmptyResponse);
  rpc post_connection(HandleRequest) returns (IIdResponse);
  rpc post_click(ControllerPostClickRequest) returns (IIdResponse);
  rpc post_swipe(ControllerPostSwipeRequest) returns (IIdResponse);
  rpc post_press_key(ControllerPostKeyRequest) returns (IIdResponse);
  rpc post_touch_down(ControllerPostTouchRequest) returns (IIdResponse);
  rpc post_touch_move(ControllerPostTouchRequest) returns (IIdResponse);
  rpc post_touch_up(ControllerPostTouchRequest) returns (IIdResponse);
  rpc post_screencap(HandleRequest) returns (IIdResponse);

  rpc status(HandleIIdRequest) returns (StatusResponse);
  rpc wait(HandleIIdRequest) returns (StatusResponse);
  rpc connected(HandleRequest) returns (BoolResponse);

  rpc image(HandleHandleRequest) returns (EmptyResponse);
  rpc uuid(HandleRequest) returns (StringResponse);
}
